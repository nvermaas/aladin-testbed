[{"R:\\source\\javascript\\astron-hips\\src\\index.js":"1","R:\\source\\javascript\\astron-hips\\src\\App.js":"2","R:\\source\\javascript\\astron-hips\\src\\reportWebVitals.js":"3","R:\\source\\javascript\\astron-hips\\src\\components\\LoadingSpinner.js":"4","R:\\source\\javascript\\astron-hips\\src\\components\\NavigationBar.js":"5","R:\\source\\javascript\\astron-hips\\src\\components\\HipsCard.js":"6","R:\\source\\javascript\\astron-hips\\src\\pages\\HipsPage.js":"7","R:\\source\\javascript\\astron-hips\\src\\components\\Main.js":"8","R:\\source\\javascript\\astron-hips\\src\\services\\FetchData.js":"9","R:\\source\\javascript\\astron-hips\\src\\contexts\\GlobalContext.js":"10","R:\\source\\javascript\\astron-hips\\src\\contexts\\GlobalStateReducer.js":"11","R:\\source\\javascript\\astron-hips\\src\\pages\\WelcomePage.js":"12","R:\\source\\javascript\\astron-hips\\src\\components\\WelcomeCard.js":"13","R:\\source\\javascript\\exoplanets\\src\\index.js":"14","R:\\source\\javascript\\exoplanets\\src\\App.js":"15","R:\\source\\javascript\\exoplanets\\src\\reportWebVitals.js":"16","R:\\source\\javascript\\exoplanets\\src\\contexts\\GlobalContext.js":"17","R:\\source\\javascript\\exoplanets\\src\\contexts\\GlobalStateReducer.js":"18","R:\\source\\javascript\\exoplanets\\src\\components\\Main.js":"19","R:\\source\\javascript\\exoplanets\\src\\components\\NavigationBar.js":"20","R:\\source\\javascript\\exoplanets\\src\\pages\\WelcomePage.js":"21","R:\\source\\javascript\\exoplanets\\src\\services\\FetchData.js":"22","R:\\source\\javascript\\exoplanets\\src\\components\\LoadingSpinner.js":"23","R:\\source\\javascript\\exoplanets\\src\\components\\WelcomeCard.js":"24","R:\\source\\javascript\\exoplanets\\src\\components\\HipsCard.js":"25","R:\\source\\javascript\\exoplanets\\src\\pages\\aladin\\AladinPage.js":"26","R:\\source\\javascript\\exoplanets\\src\\pages\\aladin\\Aladin.jsx":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":398,"mtime":1610444825100,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":172,"mtime":1548491518210,"results":"32","hashOfConfig":"29"},{"size":782,"mtime":1610455488134,"results":"33","hashOfConfig":"29"},{"size":561,"mtime":1610435032376,"results":"34","hashOfConfig":"29"},{"size":1035,"mtime":1610452368397,"results":"35","hashOfConfig":"29"},{"size":927,"mtime":1619789657170,"results":"36","hashOfConfig":"29"},{"size":3298,"mtime":1610461081241,"results":"37","hashOfConfig":"29"},{"size":420,"mtime":1598194059435,"results":"38","hashOfConfig":"29"},{"size":691,"mtime":1610445755758,"results":"39","hashOfConfig":"29"},{"size":180,"mtime":1610453412618,"results":"40","hashOfConfig":"29"},{"size":995,"mtime":1619789657157,"results":"41","hashOfConfig":"29"},{"size":500,"mtime":499162500000,"results":"42","hashOfConfig":"43"},{"size":398,"mtime":1610444825100,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":420,"mtime":1625240969304,"results":"46","hashOfConfig":"43"},{"size":2259,"mtime":1625247834521,"results":"47","hashOfConfig":"43"},{"size":948,"mtime":1625248893523,"results":"48","hashOfConfig":"43"},{"size":743,"mtime":1625248867175,"results":"49","hashOfConfig":"43"},{"size":180,"mtime":1610453412618,"results":"50","hashOfConfig":"43"},{"size":4195,"mtime":1625247789159,"results":"51","hashOfConfig":"43"},{"size":172,"mtime":1548491518210,"results":"52","hashOfConfig":"43"},{"size":982,"mtime":1625239133015,"results":"53","hashOfConfig":"43"},{"size":561,"mtime":1610435032376,"results":"54","hashOfConfig":"43"},{"size":1103,"mtime":1625248354091,"results":"55","hashOfConfig":"43"},{"size":4023,"mtime":1625248947548,"results":"56","hashOfConfig":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1i8czfu",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37w0i0",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"R:\\source\\javascript\\astron-hips\\src\\index.js",[],["121","122"],"R:\\source\\javascript\\astron-hips\\src\\App.js",[],"R:\\source\\javascript\\astron-hips\\src\\reportWebVitals.js",[],"R:\\source\\javascript\\astron-hips\\src\\components\\LoadingSpinner.js",[],"R:\\source\\javascript\\astron-hips\\src\\components\\NavigationBar.js",["123","124","125"],"import React from 'react';\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport '../App.css';\r\nimport logo from '../assets/astron-hips-logo.jpg';\r\nimport { NavLink, Link } from \"react-router-dom\"\r\n\r\nimport { useGlobalReducer } from '../contexts/GlobalContext';\r\n\r\n\r\nexport default function NavigationBar() {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n\r\n            <img class=\"App-logo\"  alt='' src={logo} width=\"150\" height=\"50\" className=\"d-inline-block align-top\"/>\r\n\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link as={NavLink} to=\"/\">Welcome</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/hips\">HiPS Surveys</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    );\r\n}","R:\\source\\javascript\\astron-hips\\src\\components\\HipsCard.js",["126","127"],"import React from 'react';\r\nimport {Card, Button, Table, Image } from 'react-bootstrap'\r\nimport Iframe from '@trendmicro/react-iframe';\r\n\r\nexport default function HipsCard(props) {\r\n        console.log(\"HipsCard \"+props.data.hips_service_url)\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Table>\r\n                    <div>\r\n                    <Iframe src={props.data.hips_service_url} width=\"100%\" height={800} />\r\n                    </div>\r\n                </Table>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n","R:\\source\\javascript\\astron-hips\\src\\pages\\HipsPage.js",["128"],"import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nimport { useGlobalReducer } from '../contexts/GlobalContext';\r\n\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport HipsCard from '../components/HipsCard'\r\n\r\nexport default function HipsPage(props) {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n    console.log('HipsPage')\r\n\r\n    // show spinner as long as the data is not read\r\n    let hipsList = my_state.hipslist\r\n    if (!hipsList || hipsList.length===0) return <LoadingSpinner/>\r\n\r\n    let tabs_array = []\r\n    for (var i = 0; i < hipsList.length; i++) {\r\n        let my_tab = <Tab className=\"Tab\" eventKey={hipsList[i]['title']} title={hipsList[i]['title']}>\r\n            <HipsCard data={hipsList[i]}/>\r\n        </Tab>\r\n        tabs_array.push(my_tab)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Tabs className=\"Tab\" defaultActiveKey={hipsList[0]['title']} id=\"hips_tab\">\r\n                {tabs_array}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}","R:\\source\\javascript\\astron-hips\\src\\components\\Main.js",[],"R:\\source\\javascript\\astron-hips\\src\\services\\FetchData.js",["129","130","131"],"import React, {useState, useEffect }  from 'react';\r\nimport { useGlobalReducer } from '../contexts/GlobalContext';\r\nimport {\r\n    SET_STATUS,\r\n    SET_HIPSLIST,\r\n} from '../contexts/GlobalStateReducer';\r\n\r\n//const url = \"https://sdc.astron.nl/astron-hips/hipslist.txt\"\r\n\r\n\r\nconst url =\r\n    process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:3000/hipslist.txt\"\r\n//        : \"https://hips.astron.nl/hipslist\"\r\n        : \"https://sdc.astron.nl/astron-hips/hipslist.txt\"\r\n\r\nexport default function FetchData () {\r\n    // use global state\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    // load the data (once, or when the url changes)\r\n    useEffect(() => {\r\n            console.log('useEffect')\r\n            fetchHipsList(url)\r\n        }, [url]\r\n    );\r\n\r\n    // get the data from the api\r\n    const fetchHipsList = (url) => {\r\n        if (my_state.status !== 'fetching') {\r\n            console.log('fetchHipsList(' + url + ')')\r\n\r\n            my_dispatch({type: SET_STATUS, status: 'fetching'})\r\n\r\n            fetch(url, {mode: 'no-cors'})\r\n                .then(results => {\r\n                    console.log('.then')\r\n                    return results.text();\r\n                })\r\n                .then(results => {\r\n                    console.log('.then again')\r\n                    let parsed_results = parseHipsList(results)\r\n                    //setHipsList(parsed_results)\r\n                    my_dispatch({type: SET_HIPSLIST, hipslist: parsed_results})\r\n                    my_dispatch({type: SET_STATUS, status: 'fetched'})\r\n                })\r\n                .catch(function () {\r\n                    alert(\"fetch jobs from \" + url + \" failed.\");\r\n                })\r\n        }\r\n    }\r\n\r\n    // construct the hipsList array of records\r\n    const parseHipsList = (results) => {\r\n        console.log(\"parseHipsList(\"+results+\")\")\r\n        let lines = results.split('\\n')\r\n        let records = []\r\n        let record = {}\r\n        let record_nr = 0\r\n\r\n        // loop through the results line by line and build the list of records\r\n        for (var i = 0; i < lines.length; i++) {\r\n\r\n            try {\r\n                let split_line = lines[i].split('=')\r\n\r\n                if (split_line[0].includes('creator_did')) {\r\n                    record['creator_did'] = split_line[1]\r\n\r\n                    let title = split_line[1].split(\"/\").pop();\r\n                    record['title'] = title.toUpperCase()\r\n                }\r\n\r\n                if (split_line[0].includes('hips_release_date')) {\r\n                    record['hips_release_date'] = split_line[1]\r\n                }\r\n\r\n                if (split_line[0].includes('hips_service_url')) {\r\n                    record['hips_service_url'] = split_line[1]\r\n                }\r\n\r\n                if (split_line[0].includes('hips_status')) {\r\n                    record['hips_status'] = split_line[1]\r\n\r\n                    // this also signals the end of the record\r\n                    // add the record to the records array, and clear the record\r\n                    records.push(record)\r\n                    record = {}\r\n                    record_nr = record_nr + 1\r\n                }\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n        }\r\n        return records\r\n    }\r\n}","R:\\source\\javascript\\astron-hips\\src\\contexts\\GlobalContext.js",["132"],"import React, {createContext, useContext, useReducer, useState} from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalContextProvider = ({reducer, initialState, children}) => {\r\n\r\n    return <GlobalContext.Provider\r\n        value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n}\r\n\r\nexport const useGlobalReducer = () => useContext(GlobalContext)\r\n","R:\\source\\javascript\\astron-hips\\src\\contexts\\GlobalStateReducer.js",[],"R:\\source\\javascript\\astron-hips\\src\\pages\\WelcomePage.js",[],"R:\\source\\javascript\\astron-hips\\src\\components\\WelcomeCard.js",["133","134","135","136"],"import React from 'react';\r\nimport {Card, Button, Table, Image } from 'react-bootstrap'\r\n\r\nimport hips_logo from '../assets/astron-vo-logo.jpg';\r\nimport astron_logo from '../assets/astron-logo.png';\r\n\r\nexport default function WelcomeCard(props) {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2>Welcome to the ASTRON HiPS service.</h2>\r\n                    <Table>\r\n                        <img src={hips_logo} />\r\n\r\n                    </Table>\r\n                    <Card.Text>\r\n\r\n                        <p>On this page, you will find&nbsp;\r\n                            <a href=\"https://aladin.u-strasbg.fr/hips/\">HiPS</a> of several of our surveys in the Virtual Observatory. </p>\r\n                        <p>Of course, our HiPS are also listed in <a href=\"https://aladin.u-strasbg.fr/\">Aladin</a></p>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\exoplanets\\src\\index.js",[],"R:\\source\\javascript\\exoplanets\\src\\App.js",[],"R:\\source\\javascript\\exoplanets\\src\\reportWebVitals.js",[],"R:\\source\\javascript\\exoplanets\\src\\contexts\\GlobalContext.js",["137"],"R:\\source\\javascript\\exoplanets\\src\\contexts\\GlobalStateReducer.js",[],"R:\\source\\javascript\\exoplanets\\src\\components\\Main.js",[],"R:\\source\\javascript\\exoplanets\\src\\components\\NavigationBar.js",["138","139","140"],"import React from 'react';\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport '../App.css';\r\nimport logo from '../logo.ico';\r\nimport { NavLink, Link } from \"react-router-dom\"\r\n\r\nimport { useGlobalReducer } from '../contexts/GlobalContext';\r\n\r\n\r\nexport default function NavigationBar() {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n\r\n            <img alt='' src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\"/>\r\n\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link as={NavLink} to=\"/\">Exoplanets</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/aladin\">Aladin</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    );\r\n}",["141","142"],"R:\\source\\javascript\\exoplanets\\src\\pages\\WelcomePage.js",[],"R:\\source\\javascript\\exoplanets\\src\\services\\FetchData.js",["143","144","145","146"],"import React, {useState, useEffect }  from 'react';\r\nimport { useGlobalReducer } from '../contexts/GlobalContext';\r\nimport {\r\n    SET_STATUS,\r\n    SET_HIPSLIST,\r\n    SET_STATUS_DATA,\r\n    SET_FETCHED_DATA\r\n} from '../contexts/GlobalStateReducer';\r\n\r\n\r\nconst url =\r\n    process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:3000/hipslist.txt\"\r\n        : \"https://hips.astron.nl/hipslist\"\r\n\r\nconst url_astrobase = \"https://uilennest.net/my_astrobase/observations2/\"\r\n\r\nexport default function FetchData () {\r\n    // use global state\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    // load the data (once, or when the url changes)\r\n    useEffect(() => {\r\n            console.log('useEffect')\r\n            fetchHipsList(url)\r\n        }, [url]\r\n    );\r\n\r\n    useEffect(() => {\r\n            fetchObservations(url_astrobase)\r\n        }, []\r\n    );\r\n\r\n    // get the data from the api\r\n    const fetchHipsList = (url) => {\r\n        if (my_state.status !== 'fetching') {\r\n            console.log('fetchHipsList(' + url + ')')\r\n\r\n            my_dispatch({type: SET_STATUS, status: 'fetching'})\r\n\r\n            fetch(url, {mode: 'no-cors'})\r\n                .then(results => {\r\n                    console.log('.then')\r\n                    return results.text();\r\n                })\r\n                .then(results => {\r\n                    console.log('.then again')\r\n                    let parsed_results = parseHipsList(results)\r\n                    //setHipsList(parsed_results)\r\n                    my_dispatch({type: SET_HIPSLIST, hipslist: parsed_results})\r\n                    my_dispatch({type: SET_STATUS, status: 'fetched'})\r\n                })\r\n                .catch(function () {\r\n                    alert(\"fetch jobs from \" + url + \" failed.\");\r\n                })\r\n        }\r\n    }\r\n\r\n    // construct the hipsList array of records\r\n    const parseHipsList = (results) => {\r\n        console.log(\"parseHipsList(\"+results+\")\")\r\n        let lines = results.split('\\n')\r\n        let records = []\r\n        let record = {}\r\n        let record_nr = 0\r\n\r\n        // loop through the results line by line and build the list of records\r\n        for (var i = 0; i < lines.length; i++) {\r\n\r\n            try {\r\n                let split_line = lines[i].split('=')\r\n\r\n                if (split_line[0].includes('creator_did')) {\r\n                    record['creator_did'] = split_line[1]\r\n\r\n                    let title = split_line[1].split(\"/\").pop();\r\n                    record['title'] = title.toUpperCase()\r\n                }\r\n\r\n                if (split_line[0].includes('hips_release_date')) {\r\n                    record['hips_release_date'] = split_line[1]\r\n                }\r\n\r\n                if (split_line[0].includes('hips_service_url')) {\r\n                    record['hips_service_url'] = split_line[1]\r\n                }\r\n\r\n                if (split_line[0].includes('hips_status')) {\r\n                    record['hips_status'] = split_line[1]\r\n\r\n                    // this also signals the end of the record\r\n                    // add the record to the records array, and clear the record\r\n                    records.push(record)\r\n                    record = {}\r\n                    record_nr = record_nr + 1\r\n                }\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n        }\r\n        return records\r\n    }\r\n\r\n    const fetchObservations = (url) => {\r\n        if (my_state.status_data !== 'fetching')  {\r\n\r\n            // apply all the filters in my_state to the url_observations\r\n\r\n            my_dispatch({type: SET_STATUS_DATA, status: 'fetching'})\r\n\r\n            fetch(url)\r\n                .then(results => {\r\n                    return results.json();\r\n                })\r\n                .then(data => {\r\n                    my_dispatch({type: SET_FETCHED_DATA, fetched_data: data.results})\r\n                    my_dispatch({type: SET_STATUS_DATA, status_data: 'fetched'})\r\n                })\r\n                .catch(function () {\r\n                    my_dispatch({type: SET_STATUS_DATA, status_data: 'failed'})\r\n                    alert(\"fetch to \" + url + \" failed.\");\r\n                })\r\n        }\r\n    }\r\n}","R:\\source\\javascript\\exoplanets\\src\\components\\LoadingSpinner.js",[],"R:\\source\\javascript\\exoplanets\\src\\components\\WelcomeCard.js",["147","148","149","150"],"R:\\source\\javascript\\exoplanets\\src\\components\\HipsCard.js",["151","152"],"R:\\source\\javascript\\exoplanets\\src\\pages\\aladin\\AladinPage.js",["153","154"],"R:\\source\\javascript\\exoplanets\\src\\pages\\aladin\\Aladin.jsx",["155","156","157","158","159","160","161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":19,"nodeType":"168","messageId":"169","endLine":6,"endColumn":23},{"ruleId":"166","severity":1,"message":"170","line":12,"column":13,"nodeType":"168","messageId":"169","endLine":12,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":12,"column":24,"nodeType":"168","messageId":"169","endLine":12,"endColumn":35},{"ruleId":"166","severity":1,"message":"172","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":21},{"ruleId":"166","severity":1,"message":"173","line":2,"column":30,"nodeType":"168","messageId":"169","endLine":2,"endColumn":35},{"ruleId":"166","severity":1,"message":"171","line":10,"column":24,"nodeType":"168","messageId":"169","endLine":10,"endColumn":35},{"ruleId":"166","severity":1,"message":"174","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"175","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":25,"column":12,"nodeType":"178","endLine":25,"endColumn":17,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"175","line":1,"column":55,"nodeType":"168","messageId":"169","endLine":1,"endColumn":63},{"ruleId":"166","severity":1,"message":"172","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":21},{"ruleId":"166","severity":1,"message":"173","line":2,"column":30,"nodeType":"168","messageId":"169","endLine":2,"endColumn":35},{"ruleId":"166","severity":1,"message":"180","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":15,"column":25,"nodeType":"183","endLine":15,"endColumn":48},{"ruleId":"166","severity":1,"message":"175","line":1,"column":55,"nodeType":"168","messageId":"169","endLine":1,"endColumn":63},{"ruleId":"166","severity":1,"message":"167","line":6,"column":19,"nodeType":"168","messageId":"169","endLine":6,"endColumn":23},{"ruleId":"166","severity":1,"message":"170","line":12,"column":13,"nodeType":"168","messageId":"169","endLine":12,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":12,"column":24,"nodeType":"168","messageId":"169","endLine":12,"endColumn":35},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"166","severity":1,"message":"174","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"175","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":26,"column":12,"nodeType":"178","endLine":26,"endColumn":17,"suggestions":"186"},{"ruleId":"176","severity":1,"message":"187","line":31,"column":12,"nodeType":"178","endLine":31,"endColumn":14,"suggestions":"188"},{"ruleId":"166","severity":1,"message":"172","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":21},{"ruleId":"166","severity":1,"message":"173","line":2,"column":30,"nodeType":"168","messageId":"169","endLine":2,"endColumn":35},{"ruleId":"166","severity":1,"message":"180","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":15,"column":25,"nodeType":"183","endLine":15,"endColumn":48},{"ruleId":"166","severity":1,"message":"172","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":21},{"ruleId":"166","severity":1,"message":"173","line":2,"column":30,"nodeType":"168","messageId":"169","endLine":2,"endColumn":35},{"ruleId":"166","severity":1,"message":"171","line":10,"column":23,"nodeType":"168","messageId":"169","endLine":10,"endColumn":34},{"ruleId":"166","severity":1,"message":"189","line":13,"column":9,"nodeType":"168","messageId":"169","endLine":13,"endColumn":22},{"ruleId":"166","severity":1,"message":"170","line":6,"column":13,"nodeType":"168","messageId":"169","endLine":6,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":6,"column":24,"nodeType":"168","messageId":"169","endLine":6,"endColumn":35},{"ruleId":"166","severity":1,"message":"190","line":7,"column":13,"nodeType":"168","messageId":"169","endLine":7,"endColumn":35},{"ruleId":"166","severity":1,"message":"191","line":23,"column":17,"nodeType":"168","messageId":"169","endLine":23,"endColumn":20},{"ruleId":"176","severity":1,"message":"192","line":38,"column":8,"nodeType":"178","endLine":38,"endColumn":10,"suggestions":"193"},{"ruleId":"166","severity":1,"message":"194","line":67,"column":11,"nodeType":"168","messageId":"169","endLine":67,"endColumn":17},{"ruleId":"166","severity":1,"message":"195","line":81,"column":13,"nodeType":"168","messageId":"169","endLine":81,"endColumn":19},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'my_state' is assigned a value but never used.","'my_dispatch' is assigned a value but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchHipsList'. Either include it or remove the dependency array. Outer scope values like 'url' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["198"],"'astron_logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["196"],["197"],["199"],"React Hook useEffect has a missing dependency: 'fetchObservations'. Either include it or remove the dependency array.",["200"],"'defaultSurvey' is assigned a value but never used.","'highlightedObservation' is assigned a value but never used.","'msg' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'createLayers', 'props.data', 'props.dec', 'props.fov', 'props.observation', and 'props.ra'. Either include them or remove the dependency array.",["201"],"'getBox' is assigned a value but never used.","'source' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [fetchHipsList]",{"range":"209","text":"210"},{"range":"211","text":"210"},"Update the dependencies array to be: [fetchObservations]",{"range":"212","text":"213"},"Update the dependencies array to be: [createLayers, props.data, props.dec, props.fov, props.observation, props.ra]",{"range":"214","text":"215"},[771,776],"[fetchHipsList]",[764,769],[861,863],"[fetchObservations]",[1348,1350],"[createLayers, props.data, props.dec, props.fov, props.observation, props.ra]"]